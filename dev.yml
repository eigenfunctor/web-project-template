version: "3"

services:

  app-proxy:
    image: traefik:2.0
    command:
      #- --log.level=DEBUG
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
    ports:
      - ${DEV_HTTP_PORT-3000}:80
      - ${DEV_TRAEFIK_UI_PORT-3001}:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
   
  client:
    build:
      context: .
      dockerfile: docker/node-dev/Dockerfile
    environment:
      APP_PROXY_URI: http://app-proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.client.entrypoints=web
      - traefik.http.routers.client.rule=PathPrefix(`/`)
      - traefik.http.services.client.loadbalancer.server.port=3000
    volumes:
      - ./client:/app

  server:
    build:
      context: .
      dockerfile: docker/node-dev/Dockerfile
    environment:
      ENABLE_ROOT_ACCOUNT: ${ENABLE_ROOT_ACCOUNT}
      ROOT_PASSWORD: ${ROOT_PASSWORD}
      APP_BASE_URL: http://localhost:${DEV_HTTP_PORT-3000}
      SMTP_HOST: smtp
      SMTP_PORT: 25
      DB_HOST: pg-dev
      DB_PASSWORD: ${DB_PASSWORD-server-dev-password}
      DB_NAME: ${DB_NAME-server-dev-db} 
    labels:
      - traefik.enable=true
      - traefik.http.routers.server.entrypoints=web
      - traefik.http.routers.server.rule=PathPrefix(`/auth`) || PathPrefix(`/graphql`)
      - traefik.http.services.server.loadbalancer.server.port=3001
    volumes:
      - ./server:/app

  smtp:
    image: namshi/smtp
    logging:
          driver: none

  pg-dev:
    image: postgres:11.5-alpine
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD-server-dev-password}
      POSTGRES_DB: ${DB_NAME-server-dev-db}
    volumes:
      - pg:/var/lib/postgresql/data

volumes:
  pg:
